--Atualiza o valor total dos items no carrinho
update item i 
join cxcommerce.carrinho c  ON c.id = i.carrinho_id
join cxcommerce.cliente cl ON c.cliente_id = cl.id
join cxcommerce.preco p ON i.preco_id = p.id
set i.total = i.quantidade * p.valor;
--Atualiza e soma o valor total do carrinho
update cxcommerce.carrinho c,
(select carrinho_id, SUM(total) as TOTAL from item group by carrinho_id) 
as I 
set c.total = i.total 
where c.id = i.carrinho_id;

-- Relatório Valor total em cada carrinho
SELECT cxcommerce.carrinho.id as Carrinho, SUM(item.quantidade * preco.valor) as Total
FROM carrinho
JOIN item ON item.carrinho_id = carrinho.id
JOIN preco ON item.preco_id = preco.id
GROUP BY carrinho.id;


-- Relatório de pedidos do cliente 1
SELECT cxcommerce.produto.nome as Nome, item.quantidade as Quantidade, preco.valor as Valor, (item.quantidade * preco.valor) as Total
FROM carrinho
JOIN item ON item.carrinho_id = carrinho.id
JOIN preco ON item.preco_id = preco.id
JOIN produto ON item.produto_id = produto.id
WHERE carrinho.cliente_id = 1;

-- Relatório de qual foi o produto mais pedido
SELECT cxcommerce.produto.nome as Nome, SUM(item.quantidade) as Quantidade
FROM item
JOIN produto ON item.produto_id = produto.id
GROUP BY produto.id
ORDER BY quantidade DESC
LIMIT 1;


-- Relatório de qual cliente gastou mais
SELECT cxcommerce.cliente.nome as Cliente, SUM(item.quantidade * preco.valor) as Total
FROM carrinho
JOIN item ON item.carrinho_id = carrinho.id
JOIN preco ON item.preco_id = preco.id
JOIN cliente ON carrinho.cliente_id = cliente.id
GROUP BY cliente.id
ORDER BY Total DESC
LIMIT 1;



-- Relatório com o total em quantidades e os valores dos itens já vendidos no sistema
SELECT cxcommerce.produto.nome as Nome, SUM(item.quantidade) as Quantidade, ROUND(AVG(preco.valor), 2) as Media_Unitária, SUM(item.quantidade * preco.valor) as Total
FROM item
JOIN produto ON item.produto_id = produto.id
JOIN preco ON item.preco_id = preco.id
GROUP BY produto.id
HAVING SUM(item.quantidade) > 0;
